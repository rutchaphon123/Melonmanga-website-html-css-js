export { deattribute } from './deattribute.mjs';
export { error } from './error.mjs';
export { filterIncludes } from './filterIncludes.mjs';
export { linkRelationships } from './linkRelationships.mjs';
export { deserialise } from './deserialise.mjs';
export { query } from './query.mjs';
export { serialise } from './serialise.mjs';
export { default as camel } from './camel.mjs';
export { default as kebab } from './kebab.mjs';
export { default as snake } from './snake.mjs';

function splitModel(url) {
  let options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};
  if (!options.pluralModel) options.pluralModel = s => s;
  if (!options.resourceCase) options.resourceCase = s => s;
  const urlSegments = url.split('/');
  const resourceModel = urlSegments.pop();
  urlSegments.push(options.pluralModel(options.resourceCase(resourceModel)));
  const newUrl = urlSegments.join('/');
  return [resourceModel, newUrl];
}

export { splitModel };
